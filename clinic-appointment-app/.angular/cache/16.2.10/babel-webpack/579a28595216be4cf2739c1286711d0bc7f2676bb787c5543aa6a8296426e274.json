{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PatientService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080';\n  }\n  reserveSlot(appointment) {\n    const body = {\n      slotID: slotId,\n      patientID: patientId\n    };\n    const url = `${this.apiUrl}/reserveslot/{id}/slot`;\n    return this.http.post(url, appointment);\n  }\n  static #_ = this.ɵfac = function PatientService_Factory(t) {\n    return new (t || PatientService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PatientService,\n    factory: PatientService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["PatientService","constructor","http","apiUrl","reserveSlot","appointment","body","slotID","slotId","patientID","patientId","url","post","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\Year4\\Tools 3\\clinic-appointment-app\\src\\app\\patient\\patient.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient,HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Observable ,tap} from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class PatientService {\n  private apiUrl = 'http://localhost:8080'; \n  constructor(private http: HttpClient) { }\n\n\n  reserveSlot(appointment: any): Observable<any> {\n    const body = { slotID: slotId, patientID: patientId };\n    const url = `${this.apiUrl}/reserveslot/{id}/slot`;\n    return this.http.post(url, appointment);\n  }\n}\n"],"mappings":";;AAMA,OAAM,MAAOA,cAAc;EAEzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IADhB,KAAAC,MAAM,GAAG,uBAAuB;EACA;EAGxCC,WAAWA,CAACC,WAAgB;IAC1B,MAAMC,IAAI,GAAG;MAAEC,MAAM,EAAEC,MAAM;MAAEC,SAAS,EAAEC;IAAS,CAAE;IACrD,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACR,MAAM,wBAAwB;IAClD,OAAO,IAAI,CAACD,IAAI,CAACU,IAAI,CAACD,GAAG,EAAEN,WAAW,CAAC;EACzC;EAAC,QAAAQ,CAAA,G;qBATUb,cAAc,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdlB,cAAc;IAAAmB,OAAA,EAAdnB,cAAc,CAAAoB,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}