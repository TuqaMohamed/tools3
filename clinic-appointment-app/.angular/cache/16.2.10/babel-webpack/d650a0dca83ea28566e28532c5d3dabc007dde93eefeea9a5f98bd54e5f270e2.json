{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../doctor/doctor.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction PatientComponent_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function PatientComponent_tr_15_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const appointment_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.editAppointment(appointment_r2));\n    });\n    i0.ɵɵtext(11, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function PatientComponent_tr_15_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const appointment_r2 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.cancelAppointment(appointment_r2));\n    });\n    i0.ɵɵtext(13, \"Cancel\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const appointment_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(3, 3, appointment_r2.date, \"shortDate\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(6, 6, appointment_r2.time, \"shortTime\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(appointment_r2.doctorName);\n  }\n}\nfunction PatientComponent_div_16_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const doctor_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", doctor_r7.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(doctor_r7.name);\n  }\n}\nfunction PatientComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2, \"Edit Appointment\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"form\")(4, \"label\", 3);\n    i0.ɵɵtext(5, \"Date:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"input\", 4);\n    i0.ɵɵlistener(\"ngModelChange\", function PatientComponent_div_16_Template_input_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.editedAppointment.date = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"label\", 5);\n    i0.ɵɵtext(8, \"Time:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"input\", 6);\n    i0.ɵɵlistener(\"ngModelChange\", function PatientComponent_div_16_Template_input_ngModelChange_9_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.editedAppointment.time = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"label\", 7);\n    i0.ɵɵtext(11, \"Doctor:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"select\", 8);\n    i0.ɵɵlistener(\"ngModelChange\", function PatientComponent_div_16_Template_select_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.editedAppointment.doctorName = $event);\n    });\n    i0.ɵɵtemplate(13, PatientComponent_div_16_option_13_Template, 2, 2, \"option\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function PatientComponent_div_16_Template_button_click_14_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.saveEditedAppointment());\n    });\n    i0.ɵɵtext(15, \"Save\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.editedAppointment.date);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.editedAppointment.time);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.editedAppointment.doctorName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.doctors);\n  }\n}\nexport class PatientComponent {\n  constructor(doctorService) {\n    this.doctorService = doctorService;\n    this.selectedDoctor = null;\n    this.doctors = [];\n    this.appointments = [{\n      date: new Date('2023-11-15T10:00:00'),\n      time: new Date('2023-11-15T10:00:00'),\n      doctorName: 'Dr. Smith'\n    }, {\n      date: new Date('2023-11-16T14:30:00'),\n      time: new Date('2023-11-16T14:30:00'),\n      doctorName: 'Dr. Johnson'\n    }];\n    this.newAppointment = {\n      date: '',\n      time: ''\n    };\n    this.availableSlots = [];\n    this.editedAppointment = null;\n    this.loadDoctors();\n  }\n  loadDoctors() {\n    this.doctorService.getDoctors().subscribe(doctors => {\n      this.doctors = doctors;\n      console.log('Doctors:', this.doctors); // Log the doctors array to the console\n    });\n  }\n\n  loadDoctorSlots() {\n    if (this.selectedDoctor) {\n      this.doctorService.getDoctorSlots(this.selectedDoctor.id.toString()).subscribe(slots => {\n        this.availableSlots = slots;\n      });\n    }\n  }\n  cancelAppointment(appointment) {\n    const index = this.appointments.indexOf(appointment);\n    if (index !== -1) {\n      this.appointments.splice(index, 1);\n    }\n  }\n  editAppointment(appointment) {\n    // Save the edited appointment for later use\n    this.editedAppointment = {\n      ...appointment\n    };\n  }\n  saveEditedAppointment() {\n    if (this.editedAppointment) {\n      // Update the original appointment with the edited values\n      const index = this.appointments.findIndex(appointment => appointment.id === this.editedAppointment.id);\n      if (index !== -1) {\n        this.appointments[index] = {\n          ...this.editedAppointment\n        };\n        this.editedAppointment = null; // Clear the edited appointment\n      }\n    }\n  }\n\n  reserveAppointment() {\n    if (this.selectedDoctor && this.newAppointment.date && this.newAppointment.time) {\n      const newAppointment = {\n        date: this.newAppointment.date,\n        time: this.newAppointment.time,\n        doctorName: this.selectedDoctor.name\n      };\n      this.appointments.push(newAppointment);\n      console.log('New Appointment:', newAppointment); // Log the new appointment to the console\n      // Reset the form fields\n      this.newAppointment = {\n        date: '',\n        time: ''\n      };\n      this.selectedDoctor = null;\n    }\n  }\n  static #_ = this.ɵfac = function PatientComponent_Factory(t) {\n    return new (t || PatientComponent)(i0.ɵɵdirectiveInject(i1.DoctorService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PatientComponent,\n    selectors: [[\"app-patient\"]],\n    decls: 21,\n    vars: 2,\n    consts: [[4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [3, \"click\"], [\"for\", \"editedDate\"], [\"type\", \"date\", \"id\", \"editedDate\", \"name\", \"editedDate\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"editedTime\"], [\"type\", \"time\", \"id\", \"editedTime\", \"name\", \"editedTime\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"editedDoctor\"], [\"id\", \"editedDoctor\", \"name\", \"editedDoctor\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 3, \"click\"], [3, \"value\"]],\n    template: function PatientComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n        i0.ɵɵtext(2, \"My Appointments\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"table\")(4, \"thead\")(5, \"tr\")(6, \"th\");\n        i0.ɵɵtext(7, \"Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"th\");\n        i0.ɵɵtext(9, \"Time\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"th\");\n        i0.ɵɵtext(11, \"Doctor Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"th\");\n        i0.ɵɵtext(13, \"Action\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(14, \"tbody\");\n        i0.ɵɵtemplate(15, PatientComponent_tr_15_Template, 14, 9, \"tr\", 0);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(16, PatientComponent_div_16_Template, 16, 4, \"div\", 1);\n        i0.ɵɵelementStart(17, \"h2\");\n        i0.ɵɵtext(18, \"Create New Appointment\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function PatientComponent_Template_button_click_19_listener() {\n          return ctx.reserveAppointment();\n        });\n        i0.ɵɵtext(20, \"Reserve\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"ngForOf\", ctx.appointments);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.editedAppointment);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm, i2.DatePipe],\n    styles: [\"\\n\\n\\n.patient-container[_ngcontent-%COMP%] {\\n    width: 80%;\\n    margin: 0 auto;\\n    padding: 20px;\\n  }\\n  \\n  table[_ngcontent-%COMP%] {\\n    width: 100%;\\n    border-collapse: collapse;\\n    margin-bottom: 20px;\\n  }\\n  \\n  table[_ngcontent-%COMP%], th[_ngcontent-%COMP%], td[_ngcontent-%COMP%] {\\n    border: 2px solid #ccc;\\n    text-align: left;\\n  }\\n  \\n  th[_ngcontent-%COMP%], td[_ngcontent-%COMP%] {\\n    padding: 10px;\\n  }\\n  \\n  .form-group[_ngcontent-%COMP%] {\\n    margin-bottom: 15px;\\n  }\\n  \\n  input[type=\\\"date\\\"][_ngcontent-%COMP%], input[type=\\\"time\\\"][_ngcontent-%COMP%], select[_ngcontent-%COMP%] {\\n    width: calc(100% - 20px);\\n    padding: 10px;\\n    font-size: 16px;\\n    border: 2px solid #ccc;\\n    border-radius: 5px;\\n  }\\n  \\n  button[_ngcontent-%COMP%] {\\n    padding: 10px 20px;\\n    font-size: 16px;\\n    border: none;\\n    background-color: #4caf50;\\n    color: white;\\n    cursor: pointer;\\n    border-radius: 5px;\\n    margin-right: 10px; \\n  }\\n  \\n  button[_ngcontent-%COMP%]:last-child {\\n    margin-right: 0; \\n  }\\n  \\n  button[_ngcontent-%COMP%]:hover {\\n    background-color: #45a049;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGF0aWVudC9wYXRpZW50LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsMEJBQTBCOztBQUUxQjtJQUNJLFVBQVU7SUFDVixjQUFjO0lBQ2QsYUFBYTtFQUNmOztFQUVBO0lBQ0UsV0FBVztJQUNYLHlCQUF5QjtJQUN6QixtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxzQkFBc0I7SUFDdEIsZ0JBQWdCO0VBQ2xCOztFQUVBO0lBQ0UsYUFBYTtFQUNmOztFQUVBO0lBQ0UsbUJBQW1CO0VBQ3JCOztFQUVBOzs7SUFHRSx3QkFBd0I7SUFDeEIsYUFBYTtJQUNiLGVBQWU7SUFDZixzQkFBc0I7SUFDdEIsa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0Usa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZixZQUFZO0lBQ1oseUJBQXlCO0lBQ3pCLFlBQVk7SUFDWixlQUFlO0lBQ2Ysa0JBQWtCO0lBQ2xCLGtCQUFrQjtFQUNwQjs7RUFFQTtJQUNFLGVBQWU7RUFDakI7O0VBRUE7SUFDRSx5QkFBeUI7RUFDM0IiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBwYXRpZW50LmNvbXBvbmVudC5jc3MgKi9cclxuXHJcbi5wYXRpZW50LWNvbnRhaW5lciB7XHJcbiAgICB3aWR0aDogODAlO1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG4gIH1cclxuICBcclxuICB0YWJsZSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gIH1cclxuICBcclxuICB0YWJsZSwgdGgsIHRkIHtcclxuICAgIGJvcmRlcjogMnB4IHNvbGlkICNjY2M7XHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gIH1cclxuICBcclxuICB0aCwgdGQge1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICB9XHJcbiAgXHJcbiAgLmZvcm0tZ3JvdXAge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTVweDtcclxuICB9XHJcbiAgXHJcbiAgaW5wdXRbdHlwZT1cImRhdGVcIl0sXHJcbiAgaW5wdXRbdHlwZT1cInRpbWVcIl0sXHJcbiAgc2VsZWN0IHtcclxuICAgIHdpZHRoOiBjYWxjKDEwMCUgLSAyMHB4KTtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICBib3JkZXI6IDJweCBzb2xpZCAjY2NjO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIH1cclxuICBcclxuICBidXR0b24ge1xyXG4gICAgcGFkZGluZzogMTBweCAyMHB4O1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzRjYWY1MDtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIG1hcmdpbi1yaWdodDogMTBweDsgXHJcbiAgfVxyXG4gIFxyXG4gIGJ1dHRvbjpsYXN0LWNoaWxkIHtcclxuICAgIG1hcmdpbi1yaWdodDogMDsgXHJcbiAgfVxyXG4gIFxyXG4gIGJ1dHRvbjpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDVhMDQ5O1xyXG4gIH1cclxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","PatientComponent_tr_15_Template_button_click_10_listener","restoredCtx","ɵɵrestoreView","_r4","appointment_r2","$implicit","ctx_r3","ɵɵnextContext","ɵɵresetView","editAppointment","PatientComponent_tr_15_Template_button_click_12_listener","ctx_r5","cancelAppointment","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind2","date","time","doctorName","ɵɵproperty","doctor_r7","name","PatientComponent_div_16_Template_input_ngModelChange_6_listener","$event","_r9","ctx_r8","editedAppointment","PatientComponent_div_16_Template_input_ngModelChange_9_listener","ctx_r10","PatientComponent_div_16_Template_select_ngModelChange_12_listener","ctx_r11","ɵɵtemplate","PatientComponent_div_16_option_13_Template","PatientComponent_div_16_Template_button_click_14_listener","ctx_r12","saveEditedAppointment","ctx_r1","doctors","PatientComponent","constructor","doctorService","selectedDoctor","appointments","Date","newAppointment","availableSlots","loadDoctors","getDoctors","subscribe","console","log","loadDoctorSlots","getDoctorSlots","id","toString","slots","appointment","index","indexOf","splice","findIndex","reserveAppointment","push","_","ɵɵdirectiveInject","i1","DoctorService","_2","selectors","decls","vars","consts","template","PatientComponent_Template","rf","ctx","PatientComponent_tr_15_Template","PatientComponent_div_16_Template","PatientComponent_Template_button_click_19_listener"],"sources":["D:\\Year4\\Tools 3\\clinic-appointment-app\\src\\app\\patient\\patient.component.ts","D:\\Year4\\Tools 3\\clinic-appointment-app\\src\\app\\patient\\patient.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { DoctorService } from '../doctor/doctor.service';\n\ninterface Doctor {\n  id: number;\n  name: string;\n}\n\ninterface Slot {\n  time: string;\n}\n@Component({\n  selector: 'app-patient',\n  templateUrl: './patient.component.html',\n  styleUrls: ['./patient.component.css']\n})\nexport class PatientComponent {\n  selectedDoctor: Doctor | null = null;\n  doctors: Doctor[] = [];\n  appointments: any[] = [\n    { date: new Date('2023-11-15T10:00:00'), time: new Date('2023-11-15T10:00:00'), doctorName: 'Dr. Smith' },\n    { date: new Date('2023-11-16T14:30:00'), time: new Date('2023-11-16T14:30:00'), doctorName: 'Dr. Johnson' }\n  ];\n  newAppointment: { date: string, time: string, slot?: Slot } = { date: '', time: ''};\n  availableSlots: Slot[] = [];\n  editedAppointment: any | null = null;\n  constructor(private doctorService: DoctorService) {\n    this.loadDoctors();\n  }\n\n  loadDoctors() {\n    this.doctorService.getDoctors().subscribe((doctors: Doctor[]) => {\n    this.doctors = doctors;\n    console.log('Doctors:', this.doctors); // Log the doctors array to the console\n  });\n  }\n\n  loadDoctorSlots() {\n    if (this.selectedDoctor) {\n      this.doctorService.getDoctorSlots(this.selectedDoctor.id.toString()).subscribe((slots: Slot[]) => {\n        this.availableSlots = slots;\n      });\n      \n    }\n  }\n\n   cancelAppointment(appointment: any) {\n     const index = this.appointments.indexOf(appointment);\n     if (index !== -1) {\n       this.appointments.splice(index, 1);\n     }\n   }\n\n   editAppointment(appointment: any) {\n    // Save the edited appointment for later use\n    this.editedAppointment = { ...appointment };\n  }\n\n  saveEditedAppointment() {\n    if (this.editedAppointment) {\n      // Update the original appointment with the edited values\n      const index = this.appointments.findIndex(appointment => appointment.id === this.editedAppointment.id);\n      if (index !== -1) {\n        this.appointments[index] = { ...this.editedAppointment };\n        this.editedAppointment = null; // Clear the edited appointment\n      }\n    }\n  }\n  reserveAppointment() {\n    if (this.selectedDoctor && this.newAppointment.date && this.newAppointment.time) {\n      const newAppointment: any = {\n        date: this.newAppointment.date,\n        time: this.newAppointment.time,\n        doctorName: this.selectedDoctor.name\n      };\n  \n      this.appointments.push(newAppointment);\n      console.log('New Appointment:', newAppointment); // Log the new appointment to the console\n  \n      // Reset the form fields\n      this.newAppointment = { date: '', time: '' };\n      this.selectedDoctor = null;\n    }\n  }\n}\n","<!-- patient.component.html -->\n\n<div>\n  <h2>My Appointments</h2>\n\n  <table>\n    <thead>\n      <tr>\n        <th>Date</th>\n        <th>Time</th>\n        <th>Doctor Name</th>\n        <th>Action</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let appointment of appointments\">\n        <td>{{ appointment.date | date:'shortDate' }}</td>\n        <td>{{ appointment.time | date:'shortTime' }}</td>\n        <td>{{ appointment.doctorName }}</td>\n        <td>\n          <button (click)=\"editAppointment(appointment)\">Edit</button>\n          <button (click)=\"cancelAppointment(appointment)\">Cancel</button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n\n  <div *ngIf=\"editedAppointment\">\n    <h3>Edit Appointment</h3>\n    <form>\n      <label for=\"editedDate\">Date:</label>\n      <input type=\"date\" id=\"editedDate\" [(ngModel)]=\"editedAppointment.date\" name=\"editedDate\">\n\n      <label for=\"editedTime\">Time:</label>\n      <input type=\"time\" id=\"editedTime\" [(ngModel)]=\"editedAppointment.time\" name=\"editedTime\">\n\n      <label for=\"editedDoctor\">Doctor:</label>\n      <select id=\"editedDoctor\" [(ngModel)]=\"editedAppointment.doctorName\" name=\"editedDoctor\">\n        <option *ngFor=\"let doctor of doctors\" [value]=\"doctor.name\">{{ doctor.name }}</option>\n      </select>\n\n      <button type=\"button\" (click)=\"saveEditedAppointment()\">Save</button>\n    </form>\n  </div>\n\n  <h2>Create New Appointment</h2>\n  <!-- Your existing form for creating a new appointment -->\n  <!-- ... -->\n\n  <button (click)=\"reserveAppointment()\">Reserve</button>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}