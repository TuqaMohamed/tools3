{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./login.service\";\nimport * as i2 from \"@angular/router\";\nexport class LoginComponent {\n  constructor(loginService, router) {\n    this.loginService = loginService;\n    this.router = router;\n    this.email = '';\n    this.password = '';\n  }\n  onSubmit() {\n    this.loginService.login(this.email, this.password).subscribe(response => {\n      const id = response.user._id;\n      const userType = response.user.userType;\n      console.log(id);\n      console.log(response);\n      console.log(response.userType);\n      console.log(this.email);\n      if (userType == 'doctor') {\n        console.log('Sign in successful');\n        this.router.navigate(['/doctor', id]);\n        this.resetForm();\n      } else if (userType == 'patient') {\n        console.log('Sign in successful');\n        this.router.navigate(['/patient', id]);\n        this.resetForm();\n      }\n    }, error => {\n      console.error('SignUp failed:', error);\n      this.resetForm();\n    });\n  }\n  resetForm() {\n    this.email = '';\n    this.password = '';\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.LoginService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 14,\n    vars: 2,\n    consts: [[1, \"login-container\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"text\", \"id\", \"email\", \"name\", \"email\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n        i0.ɵɵtext(6, \"Email:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.email = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n        i0.ɵɵtext(10, \"Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"button\", 7);\n        i0.ɵɵtext(13, \"Login\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.email);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.password);\n      }\n    },\n    styles: [\".login-container[_ngcontent-%COMP%] {\\n    width: 300px; \\n    margin: 0 auto; \\n    padding: 20px;\\n    border: 1px solid #ccc; \\n    border-radius: 10px; \\n    background-color: #f5f5f5; \\n  }\\n  \\n  .login-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n    text-align: center; \\n    font-size: 24px; \\n  }\\n  \\n  .form-group[_ngcontent-%COMP%] {\\n    margin-bottom: 15px; \\n  }\\n  \\n  label[_ngcontent-%COMP%] {\\n    font-size: 18px; \\n  }\\n  \\n  input[type=\\\"text\\\"][_ngcontent-%COMP%], input[type=\\\"password\\\"][_ngcontent-%COMP%] {\\n    width: calc(100% - 20px); \\n    padding: 10px; \\n    font-size: 16px; \\n    border: 1px solid #ccc; \\n    border-radius: 5px; \\n  }\\n  \\n  button[type=\\\"submit\\\"][_ngcontent-%COMP%] {\\n    width: 100%; \\n    padding: 10px; \\n    font-size: 18px; \\n    border: none; \\n    background-color: #4caf50; \\n    color: white; \\n    cursor: pointer; \\n    border-radius: 5px; \\n  }\\n  \\n  button[type=\\\"submit\\\"][_ngcontent-%COMP%]:hover {\\n    background-color: #45a049; \\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7SUFDWixjQUFjO0lBQ2QsYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixtQkFBbUI7SUFDbkIseUJBQXlCO0VBQzNCOztFQUVBO0lBQ0Usa0JBQWtCO0lBQ2xCLGVBQWU7RUFDakI7O0VBRUE7SUFDRSxtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxlQUFlO0VBQ2pCOztFQUVBOztJQUVFLHdCQUF3QjtJQUN4QixhQUFhO0lBQ2IsZUFBZTtJQUNmLHNCQUFzQjtJQUN0QixrQkFBa0I7RUFDcEI7O0VBRUE7SUFDRSxXQUFXO0lBQ1gsYUFBYTtJQUNiLGVBQWU7SUFDZixZQUFZO0lBQ1oseUJBQXlCO0lBQ3pCLFlBQVk7SUFDWixlQUFlO0lBQ2Ysa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0UseUJBQXlCO0VBQzNCIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZ2luLWNvbnRhaW5lciB7XHJcbiAgICB3aWR0aDogMzAwcHg7IFxyXG4gICAgbWFyZ2luOiAwIGF1dG87IFxyXG4gICAgcGFkZGluZzogMjBweDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7IFxyXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDsgXHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmNWY1OyBcclxuICB9XHJcbiAgXHJcbiAgLmxvZ2luLWNvbnRhaW5lciBoMiB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IFxyXG4gICAgZm9udC1zaXplOiAyNHB4OyBcclxuICB9XHJcbiAgXHJcbiAgLmZvcm0tZ3JvdXAge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTVweDsgXHJcbiAgfVxyXG4gIFxyXG4gIGxhYmVsIHtcclxuICAgIGZvbnQtc2l6ZTogMThweDsgXHJcbiAgfVxyXG4gIFxyXG4gIGlucHV0W3R5cGU9XCJ0ZXh0XCJdLFxyXG4gIGlucHV0W3R5cGU9XCJwYXNzd29yZFwiXSB7XHJcbiAgICB3aWR0aDogY2FsYygxMDAlIC0gMjBweCk7IFxyXG4gICAgcGFkZGluZzogMTBweDsgXHJcbiAgICBmb250LXNpemU6IDE2cHg7IFxyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYzsgXHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7IFxyXG4gIH1cclxuICBcclxuICBidXR0b25bdHlwZT1cInN1Ym1pdFwiXSB7XHJcbiAgICB3aWR0aDogMTAwJTsgXHJcbiAgICBwYWRkaW5nOiAxMHB4OyBcclxuICAgIGZvbnQtc2l6ZTogMThweDsgXHJcbiAgICBib3JkZXI6IG5vbmU7IFxyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzRjYWY1MDsgXHJcbiAgICBjb2xvcjogd2hpdGU7IFxyXG4gICAgY3Vyc29yOiBwb2ludGVyOyBcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDsgXHJcbiAgfVxyXG4gIFxyXG4gIGJ1dHRvblt0eXBlPVwic3VibWl0XCJdOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM0NWEwNDk7IFxyXG4gIH1cclxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["LoginComponent","constructor","loginService","router","email","password","onSubmit","login","subscribe","response","id","user","_id","userType","console","log","navigate","resetForm","error","_","i0","ɵɵdirectiveInject","i1","LoginService","i2","Router","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_form_ngSubmit_3_listener","LoginComponent_Template_input_ngModelChange_7_listener","$event","LoginComponent_Template_input_ngModelChange_11_listener","ɵɵadvance","ɵɵproperty"],"sources":["D:\\Year4\\Tools 3\\clinic-appointment-app\\src\\app\\login\\login.component.ts","D:\\Year4\\Tools 3\\clinic-appointment-app\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { LoginService } from './login.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  email: string = '';\n  password: string = '';\n  constructor(private loginService: LoginService, private router: Router) {}\n  onSubmit() {\n    this.loginService.login(this.email, this.password).subscribe(\n      (response)=>{\n        const id = response.user._id;\n        const userType = response.user.userType;\n        console.log(id);\n        console.log(response);\n        console.log(response.userType);\n        console.log(this.email);\n        if(userType == 'doctor'){\n          console.log('Sign in successful');\n          this.router.navigate(['/doctor',id]);\n          this.resetForm();\n          \n        }else if (userType == 'patient'){\n          console.log('Sign in successful');\n          this.router.navigate(['/patient',id]);\n          this.resetForm();\n        }\n      },\n      (error) => {\n        console.error('SignUp failed:', error);\n        this.resetForm();\n      }\n    );\n  }\n  private resetForm() {\n    this.email = '';\n    this.password = '';\n  }\n}\n","<div class=\"login-container\">\n    <h2>Login</h2>\n    <form (ngSubmit)=\"onSubmit()\">\n      <div class=\"form-group\">\n        <label for=\"email\">Email:</label>\n        <input type=\"text\" id=\"email\" [(ngModel)]=\"email\" name=\"email\" required>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password:</label>\n        <input type=\"password\" id=\"password\" [(ngModel)]=\"password\" name=\"password\" required>\n      </div>\n      <button type=\"submit\">Login</button>\n    </form>\n  </div>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}