{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LoginService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080';\n  }\n  login(Email, Password) {\n    const user = {\n      Email,\n      Password\n    };\n    console.log('Request payload:', user);\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    return this.http.post(`${this.apiUrl}/signin`, user, {\n      headers\n    });\n    ;\n  }\n  static #_ = this.ɵfac = function LoginService_Factory(t) {\n    return new (t || LoginService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoginService,\n    factory: LoginService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","LoginService","constructor","http","apiUrl","login","Email","Password","user","console","log","headers","post","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\Year4\\Tools 3\\clinic-appointment-app\\src\\app\\login\\login.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders ,HttpErrorResponse} from '@angular/common/http';\nimport { Observable ,tap} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  private apiUrl = 'http://localhost:8080';\n\n  constructor(private http: HttpClient) {}\n\n  login(Email: string, Password: string): Observable<any> {\n    const user = { Email, Password };\n    console.log('Request payload:', user);\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n\n    return this.http.post(`${this.apiUrl}/signin`, user,{ headers })\n );\n  }\n}\n"],"mappings":"AACA,SAAqBA,WAAW,QAA0B,sBAAsB;;;AAMhF,OAAM,MAAOC,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,uBAAuB;EAED;EAEvCC,KAAKA,CAACC,KAAa,EAAEC,QAAgB;IACnC,MAAMC,IAAI,GAAG;MAAEF,KAAK;MAAEC;IAAQ,CAAE;IAChCE,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,IAAI,CAAC;IACrC,MAAMG,OAAO,GAAG,IAAIX,WAAW,CAAC;MAAE,cAAc,EAAE;IAAkB,CAAE,CAAC;IAEvE,OAAO,IAAI,CAACG,IAAI,CAACS,IAAI,CAAC,GAAG,IAAI,CAACR,MAAM,SAAS,EAAEI,IAAI,EAAC;MAAEG;IAAO,CAAE,CAAC;IAClE;EACA;EAAC,QAAAE,CAAA,G;qBAZUZ,YAAY,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZjB,YAAY;IAAAkB,OAAA,EAAZlB,YAAY,CAAAmB,IAAA;IAAAC,UAAA,EAFX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}