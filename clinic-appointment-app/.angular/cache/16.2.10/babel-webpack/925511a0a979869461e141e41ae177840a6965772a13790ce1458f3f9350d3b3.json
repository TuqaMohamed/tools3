{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class MessagingService {\n  constructor() {\n    this.messagesSubject = new Subject();\n  }\n  sendMessage(message) {\n    this.messagesSubject.next(message);\n  }\n  getMessage() {\n    return this.messagesSubject.asObservable();\n  }\n  static #_ = this.ɵfac = function MessagingService_Factory(t) {\n    return new (t || MessagingService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MessagingService,\n    factory: MessagingService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["Subject","MessagingService","constructor","messagesSubject","sendMessage","message","next","getMessage","asObservable","_","_2","factory","ɵfac","providedIn"],"sources":["D:\\Year4\\Tools 3\\clinic-appointment-app\\src\\app\\messages\\messages.service.ts"],"sourcesContent":["// messaging.service.ts\nimport { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessagingService {\n  private messagesSubject = new Subject<any>();\n\n  sendMessage(message: any) {\n    this.messagesSubject.next(message);\n  }\n\n  getMessage(): Observable<any> {\n    return this.messagesSubject.asObservable();\n  }\n}\n"],"mappings":"AAEA,SAASA,OAAO,QAAoB,MAAM;;AAK1C,OAAM,MAAOC,gBAAgB;EAH7BC,YAAA;IAIU,KAAAC,eAAe,GAAG,IAAIH,OAAO,EAAO;;EAE5CI,WAAWA,CAACC,OAAY;IACtB,IAAI,CAACF,eAAe,CAACG,IAAI,CAACD,OAAO,CAAC;EACpC;EAEAE,UAAUA,CAAA;IACR,OAAO,IAAI,CAACJ,eAAe,CAACK,YAAY,EAAE;EAC5C;EAAC,QAAAC,CAAA,G;qBATUR,gBAAgB;EAAA;EAAA,QAAAS,EAAA,G;WAAhBT,gBAAgB;IAAAU,OAAA,EAAhBV,gBAAgB,CAAAW,IAAA;IAAAC,UAAA,EAFf;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}