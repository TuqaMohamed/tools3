{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DoctorService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080';\n  }\n  getDoctors() {\n    return this.http.get(`${this.apiUrl}/api/doctors`);\n  }\n  getDoctorSlots(doctorId) {\n    const url = `${this.apiUrl}/api/doctors/${doctorId}/slots`;\n    return this.http.get(url);\n  }\n  setDoctorSchedule(slot) {\n    const url = `${this.apiUrl}/api/insertslot`;\n    slot = {\n      date,\n      time\n    };\n    console.log('Request payload:', slot);\n    return this.http.post(url, slot);\n  }\n  static #_ = this.ɵfac = function DoctorService_Factory(t) {\n    return new (t || DoctorService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DoctorService,\n    factory: DoctorService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["DoctorService","constructor","http","apiUrl","getDoctors","get","getDoctorSlots","doctorId","url","setDoctorSchedule","slot","date","time","console","log","post","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\Year4\\Tools 3\\clinic-appointment-app\\src\\app\\doctor\\doctor.service.ts"],"sourcesContent":["\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DoctorService {\n  private apiUrl = 'http://localhost:8080'; \n\n  constructor(private http: HttpClient) { }\n\n  getDoctors(): Observable<any[]> {\n    return this.http.get<any[]>(`${this.apiUrl}/api/doctors`);\n  }\n\n  getDoctorSlots(doctorId: string): Observable<any[]> {\n    const url = `${this.apiUrl}/api/doctors/${doctorId}/slots`;\n    return this.http.get<any[]>(url);\n  }\n\n  setDoctorSchedule(slot: any): Observable<any> {\n    const url = `${this.apiUrl}/api/insertslot`; \n    slot={date,time}; \n    console.log('Request payload:', slot);\n    return this.http.post<any>(url, slot);\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,aAAa;EAGxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,uBAAuB;EAEA;EAExCC,UAAUA,CAAA;IACR,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAQ,GAAG,IAAI,CAACF,MAAM,cAAc,CAAC;EAC3D;EAEAG,cAAcA,CAACC,QAAgB;IAC7B,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACL,MAAM,gBAAgBI,QAAQ,QAAQ;IAC1D,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAQG,GAAG,CAAC;EAClC;EAEAC,iBAAiBA,CAACC,IAAS;IACzB,MAAMF,GAAG,GAAG,GAAG,IAAI,CAACL,MAAM,iBAAiB;IAC3CO,IAAI,GAAC;MAACC,IAAI;MAACC;IAAI,CAAC;IAChBC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEJ,IAAI,CAAC;IACrC,OAAO,IAAI,CAACR,IAAI,CAACa,IAAI,CAAMP,GAAG,EAAEE,IAAI,CAAC;EACvC;EAAC,QAAAM,CAAA,G;qBAnBUhB,aAAa,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbrB,aAAa;IAAAsB,OAAA,EAAbtB,aAAa,CAAAuB,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}