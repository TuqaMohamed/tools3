{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let LoginComponent = class LoginComponent {\n  constructor(loginService, router) {\n    this.loginService = loginService;\n    this.router = router;\n    this.username = '';\n    this.password = '';\n  }\n  onSubmit() {\n    // Call the login service\n    this.loginService.login(this.username, this.password).subscribe(response => {\n      // Handle successful login\n      console.log('Login successful:', response);\n      // Example: Navigate to a different page after successful login\n      this.router.navigate(['/dashboard']);\n    }, error => {\n      // Handle login error\n      console.error('Login failed:', error);\n      // You can display an error message to the user\n    });\n  }\n};\n\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);","map":{"version":3,"names":["Component","LoginComponent","constructor","loginService","router","username","password","onSubmit","login","subscribe","response","console","log","navigate","error","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\Year4\\Tools 3\\clinic-appointment-app\\src\\app\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { LoginService } from './login.service';\nimport { Route } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  username: string = '';\n  password: string = '';\n  constructor(private loginService: LoginService, private router: Router) {}\n  onSubmit() {\n    // Call the login service\n    this.loginService.login(this.username, this.password).subscribe(\n      (response) => {\n        // Handle successful login\n        console.log('Login successful:', response);\n\n        // Example: Navigate to a different page after successful login\n        this.router.navigate(['/dashboard']);\n      },\n      (error) => {\n        // Handle login error\n        console.error('Login failed:', error);\n        // You can display an error message to the user\n      }\n    );\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AASlC,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAGzBC,YAAoBC,YAA0B,EAAUC,MAAc;IAAlD,KAAAD,YAAY,GAAZA,YAAY;IAAwB,KAAAC,MAAM,GAANA,MAAM;IAF9D,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,QAAQ,GAAW,EAAE;EACoD;EACzEC,QAAQA,CAAA;IACN;IACA,IAAI,CAACJ,YAAY,CAACK,KAAK,CAAC,IAAI,CAACH,QAAQ,EAAE,IAAI,CAACC,QAAQ,CAAC,CAACG,SAAS,CAC5DC,QAAQ,IAAI;MACX;MACAC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,QAAQ,CAAC;MAE1C;MACA,IAAI,CAACN,MAAM,CAACS,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;IACtC,CAAC,EACAC,KAAK,IAAI;MACR;MACAH,OAAO,CAACG,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrC;IACF,CAAC,CACF;EACH;CACD;;AArBYb,cAAc,GAAAc,UAAA,EAL1Bf,SAAS,CAAC;EACTgB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWjB,cAAc,CAqB1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}