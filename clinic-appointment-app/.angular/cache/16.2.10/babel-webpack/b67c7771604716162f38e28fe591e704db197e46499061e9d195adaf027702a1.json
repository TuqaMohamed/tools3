{"ast":null,"code":"import { HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SigninService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080';\n  }\n  signUp(Name, Email, Password, UserType) {\n    const user = {\n      Name,\n      Email,\n      Password,\n      UserType\n    };\n    console.log('Request payload:', user); // Log the payload\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    return this.http.post(`${this.apiUrl}/signup`, user, {\n      headers\n    }).pipe(tap(response => {\n      console.log('Response:', response);\n      if (response.status === 200) {\n        // Handle success here\n      }\n    }, error => {\n      console.error('Error:', error);\n      if (error instanceof HttpErrorResponse) {\n        console.log('Error Status:', error.status);\n        console.log('Error Headers:', error.headers);\n        console.log('Error Body:', error.error);\n      }\n    }));\n  }\n  static #_ = this.ɵfac = function SigninService_Factory(t) {\n    return new (t || SigninService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SigninService,\n    factory: SigninService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpErrorResponse","HttpHeaders","tap","SigninService","constructor","http","apiUrl","signUp","Name","Email","Password","UserType","user","console","log","headers","post","pipe","response","status","error","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\Year4\\Tools 3\\clinic-appointment-app\\src\\app\\signin\\signin.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Observable, tap } from 'rxjs';\nimport {ApiResponse} from 'signin.models.ts'\n@Injectable({\n  providedIn: 'root'\n})\nexport class SigninService {\n\n  private apiUrl = 'http://localhost:8080'; \n\n  constructor(private http: HttpClient) {}\n\n  signUp(Name: string, Email: string, Password: string,UserType: string): Observable<any> {\n    const user = { Name, Email, Password ,UserType };\n    console.log('Request payload:', user); // Log the payload\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n\n   return this.http.post(`${this.apiUrl}/signup`, user,{headers}).pipe(\n       tap(\n        (response) => {\n          console.log('Response:', response);\n          if (response.status === 200) {\n            // Handle success here\n          }\n        },\n        (error) => {\n          console.error('Error:', error);\n          if (error instanceof HttpErrorResponse) {\n            console.log('Error Status:', error.status);\n            console.log('Error Headers:', error.headers);\n            console.log('Error Body:', error.error);\n          }\n        }\n      )\n  );\n}\n}\n"],"mappings":"AACA,SAAqBA,iBAAiB,EAAEC,WAAW,QAAQ,sBAAsB;AACjF,SAAqBC,GAAG,QAAQ,MAAM;;;AAKtC,OAAM,MAAOC,aAAa;EAIxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,uBAAuB;EAED;EAEvCC,MAAMA,CAACC,IAAY,EAAEC,KAAa,EAAEC,QAAgB,EAACC,QAAgB;IACnE,MAAMC,IAAI,GAAG;MAAEJ,IAAI;MAAEC,KAAK;MAAEC,QAAQ;MAAEC;IAAQ,CAAE;IAChDE,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,IAAI,CAAC,CAAC,CAAC;IACvC,MAAMG,OAAO,GAAG,IAAId,WAAW,CAAC;MAAE,cAAc,EAAE;IAAkB,CAAE,CAAC;IAExE,OAAO,IAAI,CAACI,IAAI,CAACW,IAAI,CAAC,GAAG,IAAI,CAACV,MAAM,SAAS,EAAEM,IAAI,EAAC;MAACG;IAAO,CAAC,CAAC,CAACE,IAAI,CAC/Df,GAAG,CACDgB,QAAQ,IAAI;MACXL,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEI,QAAQ,CAAC;MAClC,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QAC3B;MAAA;IAEJ,CAAC,EACAC,KAAK,IAAI;MACRP,OAAO,CAACO,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9B,IAAIA,KAAK,YAAYpB,iBAAiB,EAAE;QACtCa,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEM,KAAK,CAACD,MAAM,CAAC;QAC1CN,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEM,KAAK,CAACL,OAAO,CAAC;QAC5CF,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEM,KAAK,CAACA,KAAK,CAAC;;IAE3C,CAAC,CACF,CACJ;EACH;EAAC,QAAAC,CAAA,G;qBA7BYlB,aAAa,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbvB,aAAa;IAAAwB,OAAA,EAAbxB,aAAa,CAAAyB,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}