{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DoctorService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080';\n  }\n  getDoctors() {\n    return this.http.get(`${this.apiUrl}/doctors`);\n  }\n  getDoctorSlots(doctorId) {\n    const url = `${this.apiUrl}/doctors/${doctorId}/slots`;\n    return this.http.get(url);\n  }\n  setDoctorSchedule(slot, doctorId) {\n    const url = `${this.apiUrl}/insertslot/${doctorId}`;\n    console.log('Request payload:', slot);\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    return this.http.post(url, slot);\n  }\n  static #_ = this.ɵfac = function DoctorService_Factory(t) {\n    return new (t || DoctorService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DoctorService,\n    factory: DoctorService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","DoctorService","constructor","http","apiUrl","getDoctors","get","getDoctorSlots","doctorId","url","setDoctorSchedule","slot","console","log","headers","post","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\Year4\\Tools 3\\clinic-appointment-app\\src\\app\\doctor\\doctor.service.ts"],"sourcesContent":["\nimport { Injectable } from '@angular/core';\nimport { HttpClient,HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Observable ,tap} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DoctorService {\n  private apiUrl = 'http://localhost:8080'; \n\n  constructor(private http: HttpClient) { }\n\n  getDoctors(): Observable<any[]> {\n    return this.http.get<any[]>(`${this.apiUrl}/doctors`);\n  }\n\n  getDoctorSlots(doctorId: string): Observable<any[]> {\n    const url = `${this.apiUrl}/doctors/${doctorId}/slots`;\n    return this.http.get<any[]>(url);\n  }\n\n  setDoctorSchedule(slot: any,doctorId): Observable<any> {\n    const url = `${this.apiUrl}/insertslot/${doctorId}`;  \n    console.log('Request payload:', slot);\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    return this.http.post<any>(url, slot);\n  }\n}\n"],"mappings":"AAEA,SAAuCA,WAAW,QAAQ,sBAAsB;;;AAMhF,OAAM,MAAOC,aAAa;EAGxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,uBAAuB;EAEA;EAExCC,UAAUA,CAAA;IACR,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAQ,GAAG,IAAI,CAACF,MAAM,UAAU,CAAC;EACvD;EAEAG,cAAcA,CAACC,QAAgB;IAC7B,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACL,MAAM,YAAYI,QAAQ,QAAQ;IACtD,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAQG,GAAG,CAAC;EAClC;EAEAC,iBAAiBA,CAACC,IAAS,EAACH,QAAQ;IAClC,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACL,MAAM,eAAeI,QAAQ,EAAE;IACnDI,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,IAAI,CAAC;IACrC,MAAMG,OAAO,GAAG,IAAId,WAAW,CAAC;MAAE,cAAc,EAAE;IAAkB,CAAE,CAAC;IACvE,OAAO,IAAI,CAACG,IAAI,CAACY,IAAI,CAAMN,GAAG,EAAEE,IAAI,CAAC;EACvC;EAAC,QAAAK,CAAA,G;qBAnBUf,aAAa,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbpB,aAAa;IAAAqB,OAAA,EAAbrB,aAAa,CAAAsB,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}