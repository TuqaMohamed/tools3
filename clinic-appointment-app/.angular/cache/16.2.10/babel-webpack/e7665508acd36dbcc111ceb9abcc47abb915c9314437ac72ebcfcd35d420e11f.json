{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./doctor.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction DoctorComponent_tr_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function DoctorComponent_tr_13_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const appointment_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.editAppointment(appointment_r2));\n    });\n    i0.ɵɵtext(9, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function DoctorComponent_tr_13_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const appointment_r2 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.cancelAppointment(appointment_r2));\n    });\n    i0.ɵɵtext(11, \"Cancel\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const appointment_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(3, 2, appointment_r2.date, \"dd/MM/yy\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(6, 5, appointment_r2.time, \"hh:mm a\"));\n  }\n}\nfunction DoctorComponent_div_19_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const message_r7 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(message_r7);\n  }\n}\nfunction DoctorComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"ul\");\n    i0.ɵɵtemplate(2, DoctorComponent_div_19_li_2_Template, 2, 1, \"li\", 1);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.doctorMessages);\n  }\n}\nexport class DoctorComponent {\n  constructor(doctorService) {\n    this.doctorService = doctorService;\n    this.appointments = {};\n    this.showMessagesDropdown = false;\n    this.doctorMessages = ['ReservationCreated', 'ReservationUpdated', 'ReservationCancelled'];\n    this.newAppointment = {\n      date: '',\n      time: ''\n    };\n  }\n  toggleMessagesDropdown() {\n    this.showMessagesDropdown = !this.showMessagesDropdown;\n  }\n  fetchDoctorMessages() {\n    this.doctorMessages = ['Message 1', 'Message 2', 'Message 3'];\n  }\n  editAppointment(appointment) {\n    console.log('Edit appointment:', appointment);\n  }\n  cancelAppointment(appointment) {\n    const index = this.appointments.indexOf(appointment);\n    if (index !== -1) {\n      this.appointments.splice(index, 1);\n    }\n  }\n  addAppointment() {\n    const parsedTime = this.parseTimeString(this.newAppointment.time);\n    if (parsedTime) {\n      this.appointments.push({\n        date: new Date(this.newAppointment.date),\n        time: parsedTime\n      });\n      this.newAppointment = {\n        date: '',\n        time: ''\n      };\n    } else {\n      console.error('Invalid time format');\n    }\n  }\n  parseTimeString(timeString) {\n    const [hoursStr, minutesStr] = timeString.split(':');\n    const hours = parseInt(hoursStr, 10);\n    const minutes = parseInt(minutesStr, 10);\n    if (isNaN(hours) || isNaN(minutes)) {\n      console.error('Invalid time format. Please enter a valid time.');\n      return null;\n    }\n    const date = new Date();\n    date.setHours(hours, minutes, 0, 0);\n    return date;\n  }\n  setDoctorSchedule() {\n    const slot = {\n      date: this.newAppointment.date,\n      time: this.newAppointment.time\n    };\n    this.doctorService.setDoctorSchedule(slot).subscribe(response => {\n      console.log('Schedule set successfully', response);\n      // Optionally, update your UI or perform other actions upon successful schedule set\n    }, error => {\n      console.error('Error setting schedule:', error);\n      // Handle errors or display error messages to the user\n    });\n  }\n  static #_ = this.ɵfac = function DoctorComponent_Factory(t) {\n    return new (t || DoctorComponent)(i0.ɵɵdirectiveInject(i1.DoctorService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DoctorComponent,\n    selectors: [[\"app-doctor\"]],\n    decls: 32,\n    vars: 4,\n    consts: [[1, \"doctor-container\"], [4, \"ngFor\", \"ngForOf\"], [1, \"messages-container\"], [3, \"click\"], [\"class\", \"messages-dropdown\", 4, \"ngIf\"], [1, \"form-group\"], [\"for\", \"slotDate\"], [\"type\", \"date\", \"id\", \"slotDate\", \"name\", \"slotDate\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"slotTime\"], [\"type\", \"time\", \"id\", \"slotTime\", \"name\", \"slotTime\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [1, \"messages-dropdown\"]],\n    template: function DoctorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Hello, Doctor\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"h3\");\n        i0.ɵɵtext(4, \"My Slots\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"table\")(6, \"thead\")(7, \"tr\")(8, \"th\");\n        i0.ɵɵtext(9, \"Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"th\");\n        i0.ɵɵtext(11, \"Time\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(12, \"tbody\");\n        i0.ɵɵtemplate(13, DoctorComponent_tr_13_Template, 12, 8, \"tr\", 1);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"h3\");\n        i0.ɵɵtext(15, \"Doctor Messages\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 2)(17, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function DoctorComponent_Template_button_click_17_listener() {\n          return ctx.toggleMessagesDropdown();\n        });\n        i0.ɵɵtext(18, \"Show Messages\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(19, DoctorComponent_div_19_Template, 3, 1, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"h3\");\n        i0.ɵɵtext(21, \"Create New Slot\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 5)(23, \"label\", 6);\n        i0.ɵɵtext(24, \"Date:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"input\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function DoctorComponent_Template_input_ngModelChange_25_listener($event) {\n          return ctx.newAppointment.date = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(26, \"div\", 5)(27, \"label\", 8);\n        i0.ɵɵtext(28, \"Time:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function DoctorComponent_Template_input_ngModelChange_29_listener($event) {\n          return ctx.newAppointment.time = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(30, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function DoctorComponent_Template_button_click_30_listener() {\n          return ctx.addAppointment();\n        });\n        i0.ɵɵtext(31, \"Add Slot\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngForOf\", ctx.appointments);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.showMessagesDropdown);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.newAppointment.date);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.newAppointment.time);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.RequiredValidator, i3.NgModel, i2.DatePipe],\n    styles: [\".doctor-container[_ngcontent-%COMP%] {\\n  width: 80%;\\n  margin: 0 auto;\\n  padding: 20px;\\n}\\n\\n\\nbutton[_ngcontent-%COMP%] {\\n  margin-right: 10px;\\n  padding: 10px 20px;\\n  font-size: 16px;\\n  border: none;\\n  background-color: #4caf50;\\n  color: white;\\n  cursor: pointer;\\n  border-radius: 5px;\\n}\\n\\nbutton[_ngcontent-%COMP%]:hover {\\n  background-color: #45a049;\\n}\\n\\ntable[_ngcontent-%COMP%] {\\n  width: 100%;\\n  border-collapse: collapse;\\n  margin-bottom: 20px;\\n}\\n\\ntable[_ngcontent-%COMP%], th[_ngcontent-%COMP%], td[_ngcontent-%COMP%] {\\n  border: 2px solid #ccc;\\n  text-align: left;\\n}\\n\\nth[_ngcontent-%COMP%], td[_ngcontent-%COMP%] {\\n  padding: 10px;\\n}\\n\\n.form-group[_ngcontent-%COMP%] {\\n  margin-bottom: 15px;\\n}\\n\\ninput[type=\\\"date\\\"][_ngcontent-%COMP%], input[type=\\\"time\\\"][_ngcontent-%COMP%] {\\n  width: calc(100% - 20px);\\n  padding: 10px;\\n  font-size: 16px;\\n  border: 2px solid #ccc;\\n  border-radius: 5px;\\n}\\n\\n.dropdown[_ngcontent-%COMP%] {\\n  position: relative;\\n  display: inline-block;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  margin-right: 10px;\\n  padding: 10px 20px;\\n  font-size: 16px;\\n  border: none;\\n  background-color: #4caf50;\\n  color: white;\\n  cursor: pointer;\\n  border-radius: 5px;\\n}\\n\\nbutton[_ngcontent-%COMP%]:hover {\\n  background-color: #45a049;\\n}\\n\\n.dropdown-content[_ngcontent-%COMP%] {\\n  display: none;\\n  position: absolute;\\n  background-color: #f9f9f9;\\n  box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\\n  z-index: 1;\\n}\\n\\n.dropdown-content[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\\n  padding: 12px;\\n  font-size: 14px;\\n  cursor: pointer;\\n}\\n\\n.dropdown-content[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]:hover {\\n  background-color: #f1f1f1;\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZG9jdG9yL2RvY3Rvci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsVUFBVTtFQUNWLGNBQWM7RUFDZCxhQUFhO0FBQ2Y7OztBQUdBO0VBQ0Usa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixlQUFlO0VBQ2YsWUFBWTtFQUNaLHlCQUF5QjtFQUN6QixZQUFZO0VBQ1osZUFBZTtFQUNmLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCx5QkFBeUI7RUFDekIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0Usc0JBQXNCO0VBQ3RCLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGFBQWE7QUFDZjs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTs7RUFFRSx3QkFBd0I7RUFDeEIsYUFBYTtFQUNiLGVBQWU7RUFDZixzQkFBc0I7RUFDdEIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIsZUFBZTtFQUNmLFlBQVk7RUFDWix5QkFBeUI7RUFDekIsWUFBWTtFQUNaLGVBQWU7RUFDZixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSxhQUFhO0VBQ2Isa0JBQWtCO0VBQ2xCLHlCQUF5QjtFQUN6QiwyQ0FBMkM7RUFDM0MsVUFBVTtBQUNaOztBQUVBO0VBQ0UsYUFBYTtFQUNiLGVBQWU7RUFDZixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UseUJBQXlCO0FBQzNCIiwic291cmNlc0NvbnRlbnQiOlsiLmRvY3Rvci1jb250YWluZXIge1xyXG4gIHdpZHRoOiA4MCU7XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbiAgcGFkZGluZzogMjBweDtcclxufVxyXG5cclxuXHJcbmJ1dHRvbiB7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG4gIHBhZGRpbmc6IDEwcHggMjBweDtcclxuICBmb250LXNpemU6IDE2cHg7XHJcbiAgYm9yZGVyOiBub25lO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICM0Y2FmNTA7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbn1cclxuXHJcbmJ1dHRvbjpob3ZlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzQ1YTA0OTtcclxufVxyXG5cclxudGFibGUge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XHJcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxufVxyXG5cclxudGFibGUsIHRoLCB0ZCB7XHJcbiAgYm9yZGVyOiAycHggc29saWQgI2NjYztcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG59XHJcblxyXG50aCwgdGQge1xyXG4gIHBhZGRpbmc6IDEwcHg7XHJcbn1cclxuXHJcbi5mb3JtLWdyb3VwIHtcclxuICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG59XHJcblxyXG5pbnB1dFt0eXBlPVwiZGF0ZVwiXSxcclxuaW5wdXRbdHlwZT1cInRpbWVcIl0ge1xyXG4gIHdpZHRoOiBjYWxjKDEwMCUgLSAyMHB4KTtcclxuICBwYWRkaW5nOiAxMHB4O1xyXG4gIGZvbnQtc2l6ZTogMTZweDtcclxuICBib3JkZXI6IDJweCBzb2xpZCAjY2NjO1xyXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcclxufVxyXG5cclxuLmRyb3Bkb3duIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG59XHJcblxyXG5idXR0b24ge1xyXG4gIG1hcmdpbi1yaWdodDogMTBweDtcclxuICBwYWRkaW5nOiAxMHB4IDIwcHg7XHJcbiAgZm9udC1zaXplOiAxNnB4O1xyXG4gIGJvcmRlcjogbm9uZTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNGNhZjUwO1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG59XHJcblxyXG5idXR0b246aG92ZXIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICM0NWEwNDk7XHJcbn1cclxuXHJcbi5kcm9wZG93bi1jb250ZW50IHtcclxuICBkaXNwbGF5OiBub25lO1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjlmOWY5O1xyXG4gIGJveC1zaGFkb3c6IDAgOHB4IDE2cHggMCByZ2JhKDAsIDAsIDAsIDAuMik7XHJcbiAgei1pbmRleDogMTtcclxufVxyXG5cclxuLmRyb3Bkb3duLWNvbnRlbnQgZGl2IHtcclxuICBwYWRkaW5nOiAxMnB4O1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbi5kcm9wZG93bi1jb250ZW50IGRpdjpob3ZlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YxZjFmMTtcclxufVxyXG5cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","DoctorComponent_tr_13_Template_button_click_8_listener","restoredCtx","ɵɵrestoreView","_r4","appointment_r2","$implicit","ctx_r3","ɵɵnextContext","ɵɵresetView","editAppointment","DoctorComponent_tr_13_Template_button_click_10_listener","ctx_r5","cancelAppointment","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind2","date","time","message_r7","ɵɵtemplate","DoctorComponent_div_19_li_2_Template","ɵɵproperty","ctx_r1","doctorMessages","DoctorComponent","constructor","doctorService","appointments","showMessagesDropdown","newAppointment","toggleMessagesDropdown","fetchDoctorMessages","appointment","console","log","index","indexOf","splice","addAppointment","parsedTime","parseTimeString","push","Date","error","timeString","hoursStr","minutesStr","split","hours","parseInt","minutes","isNaN","setHours","setDoctorSchedule","slot","subscribe","response","_","ɵɵdirectiveInject","i1","DoctorService","_2","selectors","decls","vars","consts","template","DoctorComponent_Template","rf","ctx","DoctorComponent_tr_13_Template","DoctorComponent_Template_button_click_17_listener","DoctorComponent_div_19_Template","DoctorComponent_Template_input_ngModelChange_25_listener","$event","DoctorComponent_Template_input_ngModelChange_29_listener","DoctorComponent_Template_button_click_30_listener"],"sources":["D:\\Year4\\Tools 3\\clinic-appointment-app\\src\\app\\doctor\\doctor.component.ts","D:\\Year4\\Tools 3\\clinic-appointment-app\\src\\app\\doctor\\doctor.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { DoctorService } from './doctor.service';\n@Component({\n  selector: 'app-doctor',\n  templateUrl: './doctor.component.html',\n  styleUrls: ['./doctor.component.css']\n})\nexport class DoctorComponent {\n  appointments: any[] ={}\n  showMessagesDropdown: boolean = false;\n  doctorMessages: string[] = [\n  'ReservationCreated',\n  'ReservationUpdated',\n  'ReservationCancelled'\n]; \n  constructor(private doctorService: DoctorService) { }\n  newAppointment: { date: string, time: string } = { date: '', time: '' };\n\n  toggleMessagesDropdown() \n  {\n    this.showMessagesDropdown = !this.showMessagesDropdown;\n  }\n  \n  fetchDoctorMessages() \n  {\n    this.doctorMessages = ['Message 1', 'Message 2', 'Message 3'];\n  }\n\n  editAppointment(appointment: any) \n  {\n    console.log('Edit appointment:', appointment);\n  }\n\n  cancelAppointment(appointment: any) \n  {\n    const index = this.appointments.indexOf(appointment);\n    if (index !== -1) {\n      this.appointments.splice(index, 1);\n    }\n  }\n\n  addAppointment() \n  {\n    const parsedTime = this.parseTimeString(this.newAppointment.time);\n    if (parsedTime) {\n      this.appointments.push({\n        date: new Date(this.newAppointment.date),\n        time: parsedTime\n      });\n      this.newAppointment = { date: '', time: '' };\n    } else {\n      console.error('Invalid time format');\n    }\n  }\n\n  private parseTimeString(timeString: string): Date | null \n  {\n    const [hoursStr, minutesStr] = timeString.split(':');\n    const hours = parseInt(hoursStr, 10);\n    const minutes = parseInt(minutesStr, 10);\n  \n    if (isNaN(hours) || isNaN(minutes)) {\n      console.error('Invalid time format. Please enter a valid time.');\n      return null;\n    }\n    const date = new Date();\n    date.setHours(hours, minutes, 0, 0);\n  \n    return date;\n  }\n  setDoctorSchedule() {\n    const slot = {\n      date: this.newAppointment.date,\n      time: this.newAppointment.time,\n    };\n    this.doctorService.setDoctorSchedule(slot).subscribe(\n      (response) => {\n        console.log('Schedule set successfully', response);\n        // Optionally, update your UI or perform other actions upon successful schedule set\n      },\n      (error) => {\n        console.error('Error setting schedule:', error);\n        // Handle errors or display error messages to the user\n      }\n    );\n  }\n\n}\n","<div class=\"doctor-container\">\n    <h2>Hello, Doctor</h2>\n    <h3>My Slots</h3>\n    <table>\n      <thead>\n        <tr>\n          <th>Date</th>\n          <th>Time</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let appointment of appointments\">\n          <td>{{ appointment.date | date:'dd/MM/yy' }}</td>\n          <td>{{ appointment.time | date:'hh:mm a' }}</td>\n          <td>\n            <button (click)=\"editAppointment(appointment)\">Edit</button>\n            <button (click)=\"cancelAppointment(appointment)\">Cancel</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    <h3>Doctor Messages</h3>\n    <div class=\"messages-container\">\n        <button (click)=\"toggleMessagesDropdown()\">Show Messages</button>\n        <div *ngIf=\"showMessagesDropdown\" class=\"messages-dropdown\">\n            <ul>\n                <li *ngFor=\"let message of doctorMessages\">{{ message }}</li>\n            </ul>\n        </div>\n    </div>\n    <h3>Create New Slot</h3>\n    <div class=\"form-group\">\n      <label for=\"slotDate\">Date:</label>\n      <input type=\"date\" id=\"slotDate\" [(ngModel)]=\"newAppointment.date\" name=\"slotDate\" required>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"slotTime\">Time:</label>\n      <input type=\"time\" id=\"slotTime\" [(ngModel)]=\"newAppointment.time\" name=\"slotTime\" required>\n    </div>\n    <button (click)=\"addAppointment()\">Add Slot</button>\n  </div>\n  \n  \n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}