{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DoctorService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080'; // Adjust the backend URL accordingly\n  }\n\n  getDoctorAppointments(doctorId) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    return this.http.get(`${this.apiUrl}/doctor/appointments/${doctorId}`, {\n      headers\n    });\n  }\n  editAppointment(appointmentId, newDate, newTime) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    const body = {\n      newDate,\n      newTime\n    };\n    return this.http.put(`${this.apiUrl}/doctor/appointments/${appointmentId}`, body, {\n      headers\n    });\n  }\n  cancelAppointment(appointmentId) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    return this.http.delete(`${this.apiUrl}/doctor/appointments/${appointmentId}`, {\n      headers\n    });\n  }\n  addAppointment(newDate, newTime) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    const body = {\n      newDate,\n      newTime\n    };\n    return this.http.post(`${this.apiUrl}/doctor/appointments`, body, {\n      headers\n    });\n  }\n  static #_ = this.ɵfac = function DoctorService_Factory(t) {\n    return new (t || DoctorService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DoctorService,\n    factory: DoctorService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","DoctorService","constructor","http","apiUrl","getDoctorAppointments","doctorId","headers","get","editAppointment","appointmentId","newDate","newTime","body","put","cancelAppointment","delete","addAppointment","post","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\Year4\\Tools 3\\clinic-appointment-app\\src\\app\\doctor\\doctor.service.ts"],"sourcesContent":["// doctor.service.ts\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DoctorService {\n  private apiUrl = 'http://localhost:8080'; // Adjust the backend URL accordingly\n\n  constructor(private http: HttpClient) {}\n\n  getDoctorAppointments(doctorId: string): Observable<any> {\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n\n    return this.http.get(`${this.apiUrl}/doctor/appointments/${doctorId}`, { headers });\n  }\n\n  editAppointment(appointmentId: string, newDate: Date, newTime: Date): Observable<any> {\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    const body = { newDate, newTime };\n\n    return this.http.put(`${this.apiUrl}/doctor/appointments/${appointmentId}`, body, { headers });\n  }\n\n  cancelAppointment(appointmentId: string): Observable<any> {\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n\n    return this.http.delete(`${this.apiUrl}/doctor/appointments/${appointmentId}`, { headers });\n  }\n\n  addAppointment(newDate: Date, newTime: Date): Observable<any> {\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    const body = { newDate, newTime };\n\n    return this.http.post(`${this.apiUrl}/doctor/appointments`, body, { headers });\n  }\n}\n"],"mappings":"AAGA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAM9D,OAAM,MAAOC,aAAa;EAGxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,uBAAuB,CAAC,CAAC;EAEH;;EAEvCC,qBAAqBA,CAACC,QAAgB;IACpC,MAAMC,OAAO,GAAG,IAAIP,WAAW,CAAC;MAAE,cAAc,EAAE;IAAkB,CAAE,CAAC;IAEvE,OAAO,IAAI,CAACG,IAAI,CAACK,GAAG,CAAC,GAAG,IAAI,CAACJ,MAAM,wBAAwBE,QAAQ,EAAE,EAAE;MAAEC;IAAO,CAAE,CAAC;EACrF;EAEAE,eAAeA,CAACC,aAAqB,EAAEC,OAAa,EAAEC,OAAa;IACjE,MAAML,OAAO,GAAG,IAAIP,WAAW,CAAC;MAAE,cAAc,EAAE;IAAkB,CAAE,CAAC;IACvE,MAAMa,IAAI,GAAG;MAAEF,OAAO;MAAEC;IAAO,CAAE;IAEjC,OAAO,IAAI,CAACT,IAAI,CAACW,GAAG,CAAC,GAAG,IAAI,CAACV,MAAM,wBAAwBM,aAAa,EAAE,EAAEG,IAAI,EAAE;MAAEN;IAAO,CAAE,CAAC;EAChG;EAEAQ,iBAAiBA,CAACL,aAAqB;IACrC,MAAMH,OAAO,GAAG,IAAIP,WAAW,CAAC;MAAE,cAAc,EAAE;IAAkB,CAAE,CAAC;IAEvE,OAAO,IAAI,CAACG,IAAI,CAACa,MAAM,CAAC,GAAG,IAAI,CAACZ,MAAM,wBAAwBM,aAAa,EAAE,EAAE;MAAEH;IAAO,CAAE,CAAC;EAC7F;EAEAU,cAAcA,CAACN,OAAa,EAAEC,OAAa;IACzC,MAAML,OAAO,GAAG,IAAIP,WAAW,CAAC;MAAE,cAAc,EAAE;IAAkB,CAAE,CAAC;IACvE,MAAMa,IAAI,GAAG;MAAEF,OAAO;MAAEC;IAAO,CAAE;IAEjC,OAAO,IAAI,CAACT,IAAI,CAACe,IAAI,CAAC,GAAG,IAAI,CAACd,MAAM,sBAAsB,EAAES,IAAI,EAAE;MAAEN;IAAO,CAAE,CAAC;EAChF;EAAC,QAAAY,CAAA,G;qBA7BUlB,aAAa,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbvB,aAAa;IAAAwB,OAAA,EAAbxB,aAAa,CAAAyB,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}