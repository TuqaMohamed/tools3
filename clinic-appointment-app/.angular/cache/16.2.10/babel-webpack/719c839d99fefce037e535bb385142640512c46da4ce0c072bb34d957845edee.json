{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../messages/messages.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction DoctorComponent_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function DoctorComponent_tr_14_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const appointment_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.editAppointment(appointment_r1));\n    });\n    i0.ɵɵtext(9, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function DoctorComponent_tr_14_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const appointment_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.cancelAppointment(appointment_r1));\n    });\n    i0.ɵɵtext(11, \"Cancel\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const appointment_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(3, 2, appointment_r1.date, \"dd/MM/yy\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(6, 5, appointment_r1.time, \"hh:mm a\"));\n  }\n}\nexport class DoctorComponent {\n  constructor(messagingService) {\n    this.messagingService = messagingService;\n    this.appointments = [{\n      date: new Date('2023-11-15T10:00:00'),\n      time: new Date('2023-11-15T10:00:00')\n    }, {\n      date: new Date('2023-11-16T14:30:00'),\n      time: new Date('2023-11-16T14:30:00')\n    }];\n    this.showMessagesDropdown = false;\n    this.doctorMessages = ['ReservationCreated', 'ReservationUpdated', 'ReservationCancelled'];\n    this.newAppointment = {\n      date: '',\n      time: ''\n    };\n  }\n  toggleMessagesDropdown() {\n    this.showMessagesDropdown = !this.showMessagesDropdown;\n    // if (this.showMessagesDropdown) {\n    //     this.fetchDoctorMessages();\n    // }\n  }\n\n  fetchDoctorMessages() {\n    this.doctorMessages = ['Message 1', 'Message 2', 'Message 3'];\n  }\n  viewMessages() {\n    console.log('View Messages clicked');\n  }\n  editAppointment(appointment) {\n    console.log('Edit appointment:', appointment);\n  }\n  cancelAppointment(appointment) {\n    const index = this.appointments.indexOf(appointment);\n    if (index !== -1) {\n      this.appointments.splice(index, 1);\n    }\n  }\n  addAppointment() {\n    const parsedTime = this.parseTimeString(this.newAppointment.time);\n    if (parsedTime) {\n      this.appointments.push({\n        date: new Date(this.newAppointment.date),\n        time: parsedTime\n      });\n      this.newAppointment = {\n        date: '',\n        time: ''\n      };\n    } else {\n      console.error('Invalid time format');\n      // Handle the error as needed\n    }\n  }\n\n  parseTimeString(timeString) {\n    // Split the time string into hours, minutes, and AM/PM parts\n    const [hoursStr, minutesStr] = timeString.split(':');\n    const hours = parseInt(hoursStr, 10);\n    const minutes = parseInt(minutesStr, 10);\n    // Check if the provided time is valid\n    if (isNaN(hours) || isNaN(minutes)) {\n      console.error('Invalid time format. Please enter a valid time.');\n      return null;\n    }\n    // Create a new Date object and set the hours and minutes\n    const date = new Date();\n    date.setHours(hours, minutes, 0, 0);\n    return date;\n  }\n  sendMessageToDoctor(appointment, operation) {\n    const message = {\n      doctorId: '111',\n      patientId: '222',\n      operation,\n      appointment\n    };\n    this.messagingService.sendMessage(message);\n  }\n  static #_ = this.ɵfac = function DoctorComponent_Factory(t) {\n    return new (t || DoctorComponent)(i0.ɵɵdirectiveInject(i1.MessagingService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DoctorComponent,\n    selectors: [[\"app-doctor\"]],\n    decls: 27,\n    vars: 3,\n    consts: [[1, \"doctor-container\"], [4, \"ngFor\", \"ngForOf\"], [1, \"form-group\"], [\"for\", \"slotDate\"], [\"type\", \"date\", \"id\", \"slotDate\", \"name\", \"slotDate\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"slotTime\"], [\"type\", \"time\", \"id\", \"slotTime\", \"name\", \"slotTime\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"]],\n    template: function DoctorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Hello, Doctor\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(3, \" < \");\n        i0.ɵɵelementStart(4, \"h3\");\n        i0.ɵɵtext(5, \"My Slots\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"table\")(7, \"thead\")(8, \"tr\")(9, \"th\");\n        i0.ɵɵtext(10, \"Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"th\");\n        i0.ɵɵtext(12, \"Time\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(13, \"tbody\");\n        i0.ɵɵtemplate(14, DoctorComponent_tr_14_Template, 12, 8, \"tr\", 1);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"h3\");\n        i0.ɵɵtext(16, \"Create New Slot\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 2)(18, \"label\", 3);\n        i0.ɵɵtext(19, \"Date:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function DoctorComponent_Template_input_ngModelChange_20_listener($event) {\n          return ctx.newAppointment.date = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"div\", 2)(22, \"label\", 5);\n        i0.ɵɵtext(23, \"Time:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function DoctorComponent_Template_input_ngModelChange_24_listener($event) {\n          return ctx.newAppointment.time = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(25, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function DoctorComponent_Template_button_click_25_listener() {\n          return ctx.addAppointment();\n        });\n        i0.ɵɵtext(26, \"Add Slot\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"ngForOf\", ctx.appointments);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.newAppointment.date);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.newAppointment.time);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.RequiredValidator, i3.NgModel, i2.DatePipe],\n    styles: [\".doctor-container[_ngcontent-%COMP%] {\\n  width: 80%;\\n  margin: 0 auto;\\n  padding: 20px;\\n}\\n\\n\\n\\nbutton[_ngcontent-%COMP%] {\\n  margin-right: 10px;\\n  padding: 10px 20px;\\n  font-size: 16px;\\n  border: none;\\n  background-color: #4caf50;\\n  color: white;\\n  cursor: pointer;\\n  border-radius: 5px;\\n}\\n\\nbutton[_ngcontent-%COMP%]:hover {\\n  background-color: #45a049;\\n}\\n\\ntable[_ngcontent-%COMP%] {\\n  width: 100%;\\n  border-collapse: collapse;\\n  margin-bottom: 20px;\\n}\\n\\ntable[_ngcontent-%COMP%], th[_ngcontent-%COMP%], td[_ngcontent-%COMP%] {\\n  border: 2px solid #ccc;\\n  text-align: left;\\n}\\n\\nth[_ngcontent-%COMP%], td[_ngcontent-%COMP%] {\\n  padding: 10px;\\n}\\n\\n.form-group[_ngcontent-%COMP%] {\\n  margin-bottom: 15px;\\n}\\n\\ninput[type=\\\"date\\\"][_ngcontent-%COMP%], input[type=\\\"time\\\"][_ngcontent-%COMP%] {\\n  width: calc(100% - 20px);\\n  padding: 10px;\\n  font-size: 16px;\\n  border: 2px solid #ccc;\\n  border-radius: 5px;\\n}\\n\\n\\n.dropdown[_ngcontent-%COMP%] {\\n  position: relative;\\n  display: inline-block;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  margin-right: 10px;\\n  padding: 10px 20px;\\n  font-size: 16px;\\n  border: none;\\n  background-color: #4caf50;\\n  color: white;\\n  cursor: pointer;\\n  border-radius: 5px;\\n}\\n\\nbutton[_ngcontent-%COMP%]:hover {\\n  background-color: #45a049;\\n}\\n\\n.dropdown-content[_ngcontent-%COMP%] {\\n  display: none;\\n  position: absolute;\\n  background-color: #f9f9f9;\\n  box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\\n  z-index: 1;\\n}\\n\\n.dropdown-content[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\\n  padding: 12px;\\n  font-size: 14px;\\n  cursor: pointer;\\n}\\n\\n.dropdown-content[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]:hover {\\n  background-color: #f1f1f1;\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZG9jdG9yL2RvY3Rvci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsVUFBVTtFQUNWLGNBQWM7RUFDZCxhQUFhO0FBQ2Y7O0FBRUEsbUNBQW1DO0FBQ25DO0VBQ0Usa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixlQUFlO0VBQ2YsWUFBWTtFQUNaLHlCQUF5QjtFQUN6QixZQUFZO0VBQ1osZUFBZTtFQUNmLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCx5QkFBeUI7RUFDekIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0Usc0JBQXNCO0VBQ3RCLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGFBQWE7QUFDZjs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTs7RUFFRSx3QkFBd0I7RUFDeEIsYUFBYTtFQUNiLGVBQWU7RUFDZixzQkFBc0I7RUFDdEIsa0JBQWtCO0FBQ3BCO0FBQ0Esb0RBQW9EO0FBQ3BEO0VBQ0Usa0JBQWtCO0VBQ2xCLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIsZUFBZTtFQUNmLFlBQVk7RUFDWix5QkFBeUI7RUFDekIsWUFBWTtFQUNaLGVBQWU7RUFDZixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSxhQUFhO0VBQ2Isa0JBQWtCO0VBQ2xCLHlCQUF5QjtFQUN6QiwyQ0FBMkM7RUFDM0MsVUFBVTtBQUNaOztBQUVBO0VBQ0UsYUFBYTtFQUNiLGVBQWU7RUFDZixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UseUJBQXlCO0FBQzNCIiwic291cmNlc0NvbnRlbnQiOlsiLmRvY3Rvci1jb250YWluZXIge1xyXG4gIHdpZHRoOiA4MCU7XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbiAgcGFkZGluZzogMjBweDtcclxufVxyXG5cclxuLyogQWRkIHN0eWxpbmcgZm9yIHRoZSBuZXcgYnV0dG9uICovXHJcbmJ1dHRvbiB7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG4gIHBhZGRpbmc6IDEwcHggMjBweDtcclxuICBmb250LXNpemU6IDE2cHg7XHJcbiAgYm9yZGVyOiBub25lO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICM0Y2FmNTA7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbn1cclxuXHJcbmJ1dHRvbjpob3ZlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzQ1YTA0OTtcclxufVxyXG5cclxudGFibGUge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XHJcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxufVxyXG5cclxudGFibGUsIHRoLCB0ZCB7XHJcbiAgYm9yZGVyOiAycHggc29saWQgI2NjYztcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG59XHJcblxyXG50aCwgdGQge1xyXG4gIHBhZGRpbmc6IDEwcHg7XHJcbn1cclxuXHJcbi5mb3JtLWdyb3VwIHtcclxuICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG59XHJcblxyXG5pbnB1dFt0eXBlPVwiZGF0ZVwiXSxcclxuaW5wdXRbdHlwZT1cInRpbWVcIl0ge1xyXG4gIHdpZHRoOiBjYWxjKDEwMCUgLSAyMHB4KTtcclxuICBwYWRkaW5nOiAxMHB4O1xyXG4gIGZvbnQtc2l6ZTogMTZweDtcclxuICBib3JkZXI6IDJweCBzb2xpZCAjY2NjO1xyXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcclxufVxyXG4vKiBBZGQgc3R5bGluZyBmb3IgdGhlIGRyb3Bkb3duIGJ1dHRvbiBhbmQgY29udGVudCAqL1xyXG4uZHJvcGRvd24ge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbn1cclxuXHJcbmJ1dHRvbiB7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG4gIHBhZGRpbmc6IDEwcHggMjBweDtcclxuICBmb250LXNpemU6IDE2cHg7XHJcbiAgYm9yZGVyOiBub25lO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICM0Y2FmNTA7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbn1cclxuXHJcbmJ1dHRvbjpob3ZlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzQ1YTA0OTtcclxufVxyXG5cclxuLmRyb3Bkb3duLWNvbnRlbnQge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmOWY5Zjk7XHJcbiAgYm94LXNoYWRvdzogMCA4cHggMTZweCAwIHJnYmEoMCwgMCwgMCwgMC4yKTtcclxuICB6LWluZGV4OiAxO1xyXG59XHJcblxyXG4uZHJvcGRvd24tY29udGVudCBkaXYge1xyXG4gIHBhZGRpbmc6IDEycHg7XHJcbiAgZm9udC1zaXplOiAxNHB4O1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuLmRyb3Bkb3duLWNvbnRlbnQgZGl2OmhvdmVyIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjFmMWYxO1xyXG59XHJcblxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","DoctorComponent_tr_14_Template_button_click_8_listener","restoredCtx","ɵɵrestoreView","_r3","appointment_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","editAppointment","DoctorComponent_tr_14_Template_button_click_10_listener","ctx_r4","cancelAppointment","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind2","date","time","DoctorComponent","constructor","messagingService","appointments","Date","showMessagesDropdown","doctorMessages","newAppointment","toggleMessagesDropdown","fetchDoctorMessages","viewMessages","console","log","appointment","index","indexOf","splice","addAppointment","parsedTime","parseTimeString","push","error","timeString","hoursStr","minutesStr","split","hours","parseInt","minutes","isNaN","setHours","sendMessageToDoctor","operation","message","doctorId","patientId","sendMessage","_","ɵɵdirectiveInject","i1","MessagingService","_2","selectors","decls","vars","consts","template","DoctorComponent_Template","rf","ctx","ɵɵtemplate","DoctorComponent_tr_14_Template","DoctorComponent_Template_input_ngModelChange_20_listener","$event","DoctorComponent_Template_input_ngModelChange_24_listener","DoctorComponent_Template_button_click_25_listener","ɵɵproperty"],"sources":["D:\\Year4\\Tools 3\\clinic-appointment-app\\src\\app\\doctor\\doctor.component.ts","D:\\Year4\\Tools 3\\clinic-appointment-app\\src\\app\\doctor\\doctor.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { MessagingService } from '../messages/messages.service';\n@Component({\n  selector: 'app-doctor',\n  templateUrl: './doctor.component.html',\n  styleUrls: ['./doctor.component.css']\n})\nexport class DoctorComponent {\n appointments: any[] = [\n    { date: new Date('2023-11-15T10:00:00'), time: new Date('2023-11-15T10:00:00') },\n    { date: new Date('2023-11-16T14:30:00'), time: new Date('2023-11-16T14:30:00') }\n  ];\n  showMessagesDropdown: boolean = false;\n  doctorMessages: string[] = [\n  'ReservationCreated',\n  'ReservationUpdated',\n  'ReservationCancelled'\n]; \n  newAppointment: { date: string, time: string } = { date: '', time: '' };\n\n  constructor(private messagingService: MessagingService) {}\n  \n  toggleMessagesDropdown() {\n    this.showMessagesDropdown = !this.showMessagesDropdown;\n    // if (this.showMessagesDropdown) {\n    //     this.fetchDoctorMessages();\n    // }\n}\nfetchDoctorMessages() {\n  this.doctorMessages = ['Message 1', 'Message 2', 'Message 3'];\n}\n  viewMessages() {\n    console.log('View Messages clicked');\n}\n  editAppointment(appointment: any) {\n    console.log('Edit appointment:', appointment);\n  }\n\n  cancelAppointment(appointment: any) {\n    const index = this.appointments.indexOf(appointment);\n    if (index !== -1) {\n      this.appointments.splice(index, 1);\n    }\n  }\n\n  addAppointment() {\n    const parsedTime = this.parseTimeString(this.newAppointment.time);\n\n    if (parsedTime) {\n      this.appointments.push({\n        date: new Date(this.newAppointment.date),\n        time: parsedTime\n      });\n      this.newAppointment = { date: '', time: '' };\n    } else {\n      console.error('Invalid time format');\n      // Handle the error as needed\n    }\n  }\n\n  private parseTimeString(timeString: string): Date | null {\n    // Split the time string into hours, minutes, and AM/PM parts\n    const [hoursStr, minutesStr] = timeString.split(':');\n    const hours = parseInt(hoursStr, 10);\n    const minutes = parseInt(minutesStr, 10);\n  \n    // Check if the provided time is valid\n    if (isNaN(hours) || isNaN(minutes)) {\n      console.error('Invalid time format. Please enter a valid time.');\n      return null;\n    }\n  \n    // Create a new Date object and set the hours and minutes\n    const date = new Date();\n    date.setHours(hours, minutes, 0, 0);\n  \n    return date;\n  }\n\n  private sendMessageToDoctor(appointment: any, operation: string) {\n    const message = {\n      doctorId: '111', // Replace with the actual doctor ID\n      patientId: '222', // Replace with the actual patient ID\n      operation,\n      appointment\n    };\n\n    this.messagingService.sendMessage(message);\n  }\n  \n}\n","<div class=\"doctor-container\">\n    <h2>Hello, Doctor</h2>\n    <\n    <h3>My Slots</h3>\n    <table>\n      <!-- Table header for existing appointments -->\n      <thead>\n        <tr>\n          <th>Date</th>\n          <th>Time</th>\n        </tr>\n      </thead>\n      <!-- Table body for existing appointments -->\n      <tbody>\n        <tr *ngFor=\"let appointment of appointments\">\n          <td>{{ appointment.date | date:'dd/MM/yy' }}</td>\n          <td>{{ appointment.time | date:'hh:mm a' }}</td>\n          <td>\n            <button (click)=\"editAppointment(appointment)\">Edit</button>\n            <button (click)=\"cancelAppointment(appointment)\">Cancel</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    \n    <h3>Create New Slot</h3>\n    <div class=\"form-group\">\n      <label for=\"slotDate\">Date:</label>\n      <input type=\"date\" id=\"slotDate\" [(ngModel)]=\"newAppointment.date\" name=\"slotDate\" required>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"slotTime\">Time:</label>\n      <input type=\"time\" id=\"slotTime\" [(ngModel)]=\"newAppointment.time\" name=\"slotTime\" required>\n    </div>\n    <button (click)=\"addAppointment()\">Add Slot</button>\n  </div>\n  \n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}